# ==============================================================

suppressMessages({
  library(ggplot2)
  library(dplyr)
  library(patchwork)
  library(RColorBrewer)
})

# ==== 1. Example placeholder data ====
# Replace this with your own input, e.g.:
# df <- read.csv("your_file.csv", header = TRUE)
# Required columns:
#   groupA   – the first categorical variable (e.g., category names)
#   groupB   – the second categorical variable (e.g., subcategories)
#   groupID  – two or more grouping categories (e.g., "A", "B")
#   value    – numeric variable determining bubble size
df <- data.frame(
  groupID = rep(c("A", "B"), each = 6),
  groupA  = rep(c("Type1", "Type2", "Type3"), times = 4),
  groupB  = rep(c("Mechanism1", "Mechanism2"), each = 6),
  value   = runif(12, 0.1, 1.5)
)

# ==== 2. Convert columns to factors ====
df$groupID <- factor(df$groupID, levels = unique(df$groupID))
df$groupA  <- factor(df$groupA,  levels = unique(df$groupA))
df$groupB  <- factor(df$groupB,  levels = unique(df$groupB))

# ==== 3. Draw the bubble plot ====
p1 <- ggplot(df, aes(x = groupID, y = groupA)) +
  geom_point(aes(color = groupB, size = value), alpha = 0.75) +
  scale_color_manual(values = brewer.pal(8, "Set2")) +
  scale_size_continuous(range = c(3, 15)) +
  theme_bw() +
  theme(
    panel.grid = element_blank(),
    axis.text  = element_text(color = 'black', size = 12),
    legend.text = element_text(color = 'black', size = 11),
    plot.margin = margin()
  ) +
  labs(x = NULL, y = NULL, color = "Group B", size = "Value") +
  guides(color = guide_legend(override.aes = list(size = 5, alpha = 1)))
p1

# ==== 4. Extract coordinates ====
plot_build <- ggplot_build(p1)
coords <- plot_build$data[[1]][, c("x", "y")]
coords$groupID <- df$groupID
coords$groupA  <- df$groupA
coords$groupB  <- df$groupB
coords$value   <- df$value

# ==== 5. Split groups ====
# Assumes there are exactly two main groups in groupID
coords_1 <- subset(coords, groupID == levels(df$groupID)[1])
coords_2 <- subset(coords, groupID == levels(df$groupID)[2])

# ==== 6. Create connection line data ====
df_line <- inner_join(coords_1, coords_2,
                      by = c("groupA", "groupB"),
                      suffix = c(".g1", ".g2")) %>%
  select(x1 = x.g1, y1 = y.g1,
         x2 = x.g2, y2 = y.g2,
         category = groupB)

# ==== 7. Draw connecting line plot ====
p2 <- ggplot(df_line) +
  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, color = category),
               size = 0.6, alpha = 0.8) +
  geom_point(aes(x = x1, y = y1), size = 3, fill = "#ffffff", shape = 21, color = "black") +
  geom_point(aes(x = x2, y = y2), size = 3, fill = "#ffffff", shape = 21, color = "black") +
  geom_text(aes(x = x1 - 0.2, y = y1, label = groupA), hjust = 1, size = 3) +
  geom_text(aes(x = x2 + 0.2, y = y2, label = groupB), hjust = 0, size = 3) +
  scale_color_manual(values = brewer.pal(8, "Set2")) +
  theme_void() +
  theme(legend.position = "none")
p2

# ==== 8. Combine the two plots ====
final_plot <- p2 + p1 + plot_layout(widths = c(1, 2))
print(final_plot)

# ==== 9. (Optional) Save output ====
# ggsave("bubble_connection_plot.pdf", final_plot, width = 10, height = 6, dpi = 300)
